plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'idea'  // IDEA 플러그인 추가 (선택사항)
}

group = 'io.spring'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.1.0'

    // Annotation Processors
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Lombok - annotationProcessor를 먼저 선언
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    implementation("com.google.guava:guava:33.4.8-jre")

    // Spring Boot Configuration Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Database
    implementation 'org.postgresql:postgresql:42.7.6'

    // Spring AI 의존성 임시 비활성화 (문제 원인 파악)
     implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-SNAPSHOT")
//     implementation 'org.springframework.ai:spring-ai-starter-model-openai'  // OpenAI starter 사용
//     implementation 'org.springframework.ai:spring-ai-starter-model-anthropic'
     implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
//     implementation 'org.springframework.ai:spring-ai-openai'
//     implementation 'org.springframework.ai:spring-ai-anthropic'
     implementation 'org.springframework.ai:spring-ai-starter-vector-store-pgvector'

    // ModelMapper
    implementation 'org.modelmapper:modelmapper:3.2.3'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// QueryDSL Q클래스 생성 디렉토리
def querydslGenerated = layout.buildDirectory.dir("generated/querydsl")

// 소스셋 설정
sourceSets {
    main {
        java {
            srcDirs += querydslGenerated
        }
    }
}

// JavaCompile 태스크 설정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(querydslGenerated)
}

// IDEA 플러그인 설정 (선택사항)
idea {
    module {
        sourceDirs += file("build/generated/querydsl")
        generatedSourceDirs += file("build/generated/querydsl")
    }
}

// Clean 시 생성된 Q클래스 제거
clean {
    doLast {
        delete querydslGenerated
    }
}

// 테스트 설정
tasks.named('test') {
    useJUnitPlatform()
}