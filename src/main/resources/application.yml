spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/identity
    username: admin
    password: 1111
    hikari:
      auto-commit: false
    driver-class-name: org.postgresql.Driver

  ai:
    anthropic:
      api-key: ${ANTHROPIC_API_KEY}
      chat:
        options:
          model: claude-sonnet-4-20250514
          temperature: 0.3  # JSON 생성에는 낮은 temperature가 좋음

    openai:
      api-key: ${OPENAI_API_KEY}
      base-url: https://api.openai.com  # 명시적 설정
      embedding:
        enabled: true  # 명시적으로 활성화
        options:
          model: text-embedding-3-small

    vectorstore:
      pgvector:
        table-name: iam_vectors
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        dimensions: 1536
        initialize-schema: true
        max-document-batch-size: 10000 # Optional: Maximum number of documents per batch

  jpa:
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update  # production: validate, development: update
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: update
        jdbc:
          lob:
            non_contextual_creation: true
        connection:
          provider_disables_autocommit: true
        query:
          in_clause_parameter_padding: true
    show-sql: false

  jackson:
    serialization:
      fail-on-self-references: false

logging:
  level:
    # Hibernate SQL 로깅
    org.hibernate.SQL: DEBUG
    # 파라미터 바인딩 값 로깅
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    # 결과 추출 로깅
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    # QueryDSL 로깅
    com.querydsl.sql: DEBUG
    com.querydsl.jpa: DEBUG
    # Spring Transaction 로깅
    org.springframework.transaction: DEBUG
    # JPA Transaction 로깅
    org.springframework.orm.jpa: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
